{"version":3,"sources":["images/rose.mp4","images/cover.png","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TabPane","PhoneOutlined","MailOutlined","GithubOutlined","Tabs","callback","key","console","log","httpServer","io","connect","Search","Input","App","refvideo","React","useRef","useState","content","currentTime","bulleList","setBullList","layerNode","setLayerNode","freezeList","setFreezeList","useEffect","bulle","emit","on","list","obj","push","sendBulleFn","useCallback","v","a","y","Math","floor","random","blueRect","Konva","Label","x","tag","Tag","fill","cornerRadius","text","Text","fontSize","padding","add","to","duration","setTimeout","destroy","innerList","current","addEventListener","throttle","filter","item","forEach","index","className","mode","theme","Item","href","id","src","kobe","poster","cover","controls","muted","ref","style","position","width","height","top","left","node","defaultActiveKey","onChange","tab","map","placeholder","onSearch","value","toFixed","date","Date","sendTime","M","getMonth","toString","length","D","getDay","hh","getHours","mm","getMinutes","ss","getSeconds","sendBulle","enterButton","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2579084e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rose.ae48b193.mp4\";","module.exports = __webpack_public_path__ + \"static/media/cover.80738dd6.png\";","import React from 'react';\nimport { Input, Tabs, Menu, Button } from 'antd';\nimport io from 'socket.io-client';\nimport { Stage, Layer } from 'react-konva';\nimport Konva from 'konva';\n// import {IFrame} from 'konva/types/types';\nimport { GithubOutlined, GoogleOutlined, ZhihuOutlined, PhoneOutlined, MailOutlined } from '@ant-design/icons';\nimport './App.css';\nimport { throttle } from 'lodash';\nimport kobe from './images/rose.mp4';\nimport cover from './images/cover.png';\n\n\ninterface ListData {\n  icon: any,\n  title: string,\n  isLink?: boolean\n}\n\nconst data:Array<ListData> = [\n  {\n    icon: <PhoneOutlined />,\n    title: '18234082909',\n  },\n  {\n    icon: <MailOutlined />,\n    title: '941820581@qq.com',\n  },\n  {\n    icon: <GithubOutlined />,\n    title: 'https://github.com/xueyida',\n    isLink: true,\n  },\n];\n\nconst { TabPane } = Tabs;\n\nfunction callback(key:string) {\n  // eslint-disable-next-line no-console\n  console.log(key);\n}\n\ninterface BulleListProps {\n  content: string,\n  currentTime: any,\n}\n\nconst httpServer = io.connect('http://47.103.206.38:3001'); // 后台IP地址及端口号 （自己电脑的ip）\n\n\nconst { Search } = Input;\n\nfunction App() {\n  const refvideo = React.useRef<HTMLVideoElement>(null);\n\n  const [bulleList, setBullList] = React.useState<Array<BulleListProps>>([\n    {\n      content: '',\n      currentTime: '', \n    },\n  ]);\n  const [layerNode, setLayerNode] = React.useState<any>();\n  const [freezeList, setFreezeList] = React.useState<Array<BulleListProps>>([\n    {\n      content: '',\n      currentTime: '', \n    },\n  ]);\n\n  React.useEffect(() => {\n    let bulle:Array<any>;\n\n    httpServer.emit('login');\n    httpServer.on('loginSuccess', (list:any) => {\n      if (list) {\n        bulle = list;\n        setBullList(list);\n        setFreezeList(list);\n      }\n    });\n\n    httpServer.on('messageSuccess', (obj:any) => { // 自己的信息发送成功。\n      bulle.push(obj);\n      setBullList([...bulle]);\n    });\n  }, []);\n\n  \n  const sendBulleFn = React.useCallback(async (v) => {\n    if (layerNode) {\n      const y = Math.floor(300 * Math.random());\n\n      const blueRect = new Konva.Label({\n        x: 700,\n        y,\n      });\n      // blueRect.\n      const tag = new Konva.Tag({\n        fill: 'rgba(0, 0, 0, 0.26)',\n        cornerRadius: 5,\n      });\n\n      const text = new Konva.Text({\n        text: v,\n        fontSize: 24,\n        padding: 5,\n        fill: '#fff',\n      });\n\n      blueRect.add(tag);\n      blueRect.add(text);\n\n\n      layerNode.add(blueRect); \n      await blueRect.to({\n        duration: 4,\n        x: -500,\n      });\n      setTimeout(() => {\n        blueRect.destroy();\n      }, 3500);\n    }\n  }, [layerNode]);\n\n\n  React.useEffect(() => {\n    let innerList = freezeList;\n\n    if (refvideo.current) {\n      refvideo.current.addEventListener('timeupdate', throttle(() => {\n        if (refvideo.current) {\n          const { currentTime } = refvideo.current;\n\n          innerList.filter((item) => {\n            return item.currentTime < currentTime;\n          })\n            .forEach((item, index) => {\n              setTimeout(() => {\n                sendBulleFn(item.content);\n              }, 100 * index);\n            });\n\n          innerList = innerList.filter((item) => {\n            return item.currentTime > currentTime;\n          });\n        }\n      }, 1000));\n    }\n  }, [refvideo, freezeList, sendBulleFn]);\n\n  \n\n\n\n  const sendBulle = (v:string) => {\n    let currentTime = '0';\n\n    if (refvideo.current) {\n      currentTime = refvideo.current.currentTime.toFixed(2);\n    }\n\n    const date = new Date();\n\n    const sendTime = {\n      M: (date.getMonth() + 1).toString().length === 1 ? `0${ (date.getMonth() + 1).toString()}` : (date.getMonth() + 1).toString(),\n      D: date.getDay().toString().length === 1 ? `0${ date.getDay().toString()}` : date.getDay().toString(),\n      hh: date.getHours().toString().length === 1 ? `0${ date.getHours().toString()}` : date.getHours().toString(),\n      mm: date.getMinutes().toString().length === 1 ? `0${ date.getMinutes().toString()}` : date.getMinutes().toString(),\n      ss: date.getSeconds().toString().length === 1 ? `0${ date.getSeconds().toString()}` : date.getSeconds().toString(),\n    };\n    \n    const a = {\n      content: v,\n      sendTime,\n      currentTime,\n    };\n\n\n    sendBulleFn(v);\n    httpServer.emit('message', a);\n  };\n\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div className=\"logo\"/>\n        <Menu\n            mode=\"horizontal\"\n            theme=\"dark\"\n          >\n            <Menu.Item key=\"1\">\n              <a href=\"#home\">Home</a>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <a href=\"#Demo\">Demo</a>\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <a href=\"#About\">About</a>\n            </Menu.Item>\n        </Menu>\n      </div>\n      <div className=\"App-content\">\n        <div className=\"home\" id=\"Home\">\n          <div className=\"homeInner\">\n            <div className=\"name\">\n              <span className=\"last\">Front-End Engineer</span>\n              <span className=\"first\">& XUE YIDA</span>\n            </div>\n            {/* <div className=\"occ\">Front-End Engineer</div> */}\n          </div>\n        </div>\n        <div className=\"App-content-description\">\n          <div className=\"main\" id=\"Demo\">\n            <div className=\"videoWrap\">\n              <video\n                src={kobe}\n                className=\"video\"\n                poster={cover}\n                controls\n                muted\n                ref={refvideo}\n              />\n              <div style={{\n                position: 'absolute',\n                width: '100%',\n                height: '75%',\n                top: 0,\n                left: 0, \n              }}\n              >\n                <Stage\n                  width={700}\n                  height={300}\n                >\n                  <Layer \n                    ref={(node) => {\n                      setLayerNode(node);\n                    }}\n                  />\n                </Stage>\n              </div>\n            </div>\n          </div>\n          <div className=\"dmWrap\">\n            <div className=\"dmContent\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                onChange={callback}\n              >\n                <TabPane\n                  tab=\"弹幕列表\"\n                  key=\"1\"\n                >\n                  <div className=\"itemWrap\">\n                    {\n                      bulleList.map((item) => {\n                        return (\n                          <div>\n                            {item.content}\n                          </div>\n                        );\n                      })\n                    }\n                  </div>\n                </TabPane>\n               \n              </Tabs>\n            </div>\n            <div className=\"dmFooter\">\n              <Search\n                placeholder=\"input search text\"\n                onSearch={(value) => sendBulle(value)}\n                style={{ width: '100%' }}\n                enterButton=\"发送弹幕\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer className=\"App-footer\" id=\"About\">\n        <div className=\"App-footer-item\">\n          <div className=\"item-header\">Introduction</div>\n          <div className=\"item-content\">\n            <a target=\"_blank\" href=\"https://xueyida.github.io/\">Project Repository</a>\n          </div>\n        </div>\n        <div className=\"App-footer-item App-footer-item-about\">\n          <div className=\"item-header\">About</div>\n          <div className=\"item-content\">\n            <a target=\"_blank\" href=\"https://xueyida.github.io/\">Blog</a>\n            <a target=\"_blank\" href=\"https://github.com/xueyida\">Github</a>\n            <a target=\"_blank\" href=\"https://github.com/xueyida/Notea\">NoteBook</a>\n          </div>\n        </div>\n        <div className=\"App-footer-item\">\n          <div className=\"item-header\">Todo</div>\n          <div className=\"item-content\">\n            <span>弹幕优化</span>\n            <span>新的demo</span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}