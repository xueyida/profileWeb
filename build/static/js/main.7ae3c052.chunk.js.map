{"version":3,"sources":["images/rose.mp4","images/cover.png","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","data","icon","PhoneOutlined","title","MailOutlined","GithubOutlined","isLink","TabPane","Tabs","callback","key","console","log","httpServer","io","connect","Search","Input","App","refvideo","React","useRef","useState","content","currentTime","bulleList","setBullList","layerNode","setLayerNode","freezeList","setFreezeList","useEffect","bulle","emit","on","list","obj","push","sendBulleFn","useCallback","v","a","y","Math","floor","random","blueRect","Konva","Label","x","tag","Tag","fill","cornerRadius","text","Text","fontSize","padding","add","to","duration","setTimeout","destroy","innerList","current","addEventListener","throttle","filter","item","forEach","index","className","GoogleOutlined","ZhihuOutlined","src","kobe","poster","cover","controls","ref","style","position","width","height","top","left","node","defaultActiveKey","onChange","tab","map","placeholder","onSearch","value","toFixed","date","Date","sendTime","M","getMonth","toString","length","D","getDay","hh","getHours","mm","getMinutes","ss","getSeconds","sendBulle","enterButton","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ae3c052.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rose.ae48b193.mp4\";","module.exports = __webpack_public_path__ + \"static/media/cover.80738dd6.png\";","import React from 'react';\nimport { Divider, Input, Button, Tabs} from 'antd';\nimport io from 'socket.io-client';\nimport {Stage, Layer, Rect, Text} from 'react-konva';\nimport Konva from 'konva';\n// import {IFrame} from 'konva/types/types';\nimport {GithubOutlined, GoogleOutlined, ZhihuOutlined, PhoneOutlined, MailOutlined} from '@ant-design/icons';\nimport './App.css';\nimport kobe from './images/rose.mp4';\nimport cover from './images/cover.png';\nimport { throttle } from 'lodash';\n\n\ninterface ListData {\n  icon: any,\n  title: string,\n  isLink?: boolean\n}\n\nconst data:Array<ListData> = [\n  {\n    icon: <PhoneOutlined />,\n    title: '18234082909',\n  },\n  {\n    icon: <MailOutlined />,\n    title: '941820581@qq.com',\n  },\n  {\n    icon: <GithubOutlined />,\n    title: 'https://github.com/xueyida',\n    isLink: true,\n  },\n];\n\nconst { TabPane } = Tabs;\n\nfunction callback(key:string) {\n  console.log(key);\n}\n\ninterface BulleListProps {\n  content: string,\n  currentTime: any,\n}\n\nconst httpServer = io.connect('http://47.103.206.38:3001'); // 后台IP地址及端口号 （自己电脑的ip）\n\n\nconst { Search } = Input;\n\nfunction App() {\n\n  const refvideo =  React.useRef<HTMLVideoElement>(null);\n\n  const [bulleList, setBullList] = React.useState<Array<BulleListProps>>([{content: '', currentTime: ''}]);\n  const [layerNode, setLayerNode] = React.useState<any>();\n  const [freezeList, setFreezeList] = React.useState<Array<BulleListProps>>([{content: '', currentTime: ''}]);\n\n  React.useEffect(() => {\n    let bulle:Array<any>;\n\n    httpServer.emit('login');\n    httpServer.on('loginSuccess', function (list:any) {\n      if (list) {\n        bulle = list;\n        setBullList(list);\n        setFreezeList(list);\n      }\n    });\n\n    httpServer.on('messageSuccess', function (obj:any) { // 自己的信息发送成功。\n      bulle.push(obj)\n      setBullList([...bulle]);\n    });\n\n\n  }, [httpServer])\n\n  \n  const sendBulleFn = React.useCallback(async (v) => {\n    if(layerNode){\n      const y =  Math.floor(300*Math.random())\n\n      const blueRect = new Konva.Label({\n        x: 700,\n        y,\n      });\n      // blueRect.\n      const tag = new Konva.Tag({\n        fill:'rgba(0, 0, 0, 0.26)',\n        cornerRadius:5,\n      })\n\n      const text = new Konva.Text({\n        text: v,\n        fontSize: 24,\n        padding: 5,\n        fill: '#fff',\n      })\n\n      blueRect.add(tag);\n      blueRect.add(text);\n\n\n      layerNode.add(blueRect); \n      await blueRect.to({\n        duration: 4,\n        x:-500,\n      })\n      setTimeout(()=> {\n        blueRect.destroy();\n      }, 3500)\n\n    }\n  }, [layerNode])\n\n\n  React.useEffect(() => {\n    \n    let innerList = freezeList;\n    if(refvideo.current){\n      refvideo.current.addEventListener('timeupdate', throttle(function(){\n        if(refvideo.current){\n          const currentTime = refvideo.current.currentTime;\n          innerList.filter((item) => {\n            return item.currentTime<currentTime;\n          })\n          .forEach((item, index) => {\n            setTimeout(function(){\n              sendBulleFn(item.content);\n            }, 100*index)\n          })\n\n          innerList = innerList.filter((item) => {\n            return item.currentTime>currentTime;\n          })\n        }\n      }, 1000))\n    }\n  }, [refvideo, freezeList])\n\n  \n\n\n\n  const sendBulle = (v:string) => {\n    \n    let currentTime = '0';\n    if(refvideo.current){\n      currentTime = refvideo.current.currentTime.toFixed(2);\n    }\n\n    var date = new Date();\n\n    const sendTime = {\n      M: (date.getMonth() + 1).toString().length === 1 ? '0' + (date.getMonth() + 1).toString() : (date.getMonth() + 1).toString(),\n      D: date.getDay().toString().length === 1 ? '0' + date.getDay().toString() : date.getDay().toString(),\n      hh: date.getHours().toString().length === 1 ? '0' + date.getHours().toString() : date.getHours().toString(),\n      mm: date.getMinutes().toString().length === 1 ? '0' + date.getMinutes().toString() : date.getMinutes().toString(),\n      ss: date.getSeconds().toString().length === 1 ? '0' + date.getSeconds().toString() : date.getSeconds().toString()\n    }\n    \n    const a = {\n      content: v,\n      sendTime,\n      currentTime,\n    }\n\n    const y =  Math.floor(300*Math.random())\n\n    sendBulleFn(v)\n    httpServer.emit('message', a);\n  }\n\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <div className=\"App-header-avatar\" /> */}\n        <div className=\"App-header-top\">\n          <div className=\"App-header-iconWrap\">\n            <GithubOutlined />\n            <GoogleOutlined />\n            <ZhihuOutlined />\n          </div>\n        </div>\n      </header>\n      <div className=\"App-content\">\n        <div className=\"App-content-description\">\n          <div className=\"main\">\n            <div className=\"videoWrap\">\n              <video\n                src={kobe}\n                className=\"video\"\n                poster={cover}\n                controls\n                ref={refvideo}\n              />\n              <div style={{position: 'absolute', width: '100%', height: '75%', top: 0, left: 0}}>\n                <Stage width={700} height={300}>\n                  <Layer \n                     ref={node => {\n                      setLayerNode(node);\n                    }}\n                  >\n                  </Layer>\n                </Stage>\n              </div>\n            </div>\n          </div>\n          <div className=\"dmWrap\">\n            <div className=\"dmContent\">\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"弹幕列表\" key=\"1\">\n                  {\n                    bulleList.map((item) => {\n                      return (\n                        <div>\n                          {item.content}\n                        </div>\n                      )\n                    })\n                  }\n                </TabPane>\n               \n              </Tabs>\n            </div>\n            <div className=\"dmFooter\">\n            <Search\n              placeholder=\"input search text\"\n              onSearch={value => sendBulle(value)}\n              style={{ width: \"100%\" }}\n              enterButton=\"发送弹幕\"\n            />\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer className=\"App-footer\">\n        {\n          data.map((item) => {\n            return (\n              <span className=\"App-footer-item\">\n                {\n                  item.isLink ? (\n                    <a\n                      href={item.title}\n                      target=\"_blank\"\n                    >\n                      {/* <Icon type={item.icon} /> */}\n                      {item.icon}\n                      <span className=\"App-footer-item-title\">\n                        {item.title}\n                      </span>\n                    </a>\n                  ) : (\n                    <>\n                      {/* <Icon type={item.icon} /> */}\n                      {item.icon}\n                      <span className=\"App-footer-item-title\">\n                        {item.title}\n                      </span>\n                    </>\n                  )\n                }\n                \n              </span>\n            );\n          })\n        }\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}